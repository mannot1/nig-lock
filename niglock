local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local mouse = player:GetMouse()
local holdingR = false
local character = player.Character or player.CharacterAdded:Wait()

-- Update character reference on respawn
local function onCharacterAdded(newChar)
    character = newChar
end
player.CharacterAdded:Connect(onCharacterAdded)

-- Function to get mouse world position with filtering
local function getMouseTargetPosition()
    if not character then return Vector3.new() end
    local camera = Workspace.CurrentCamera
    local unitRay = camera:ScreenPointToRay(mouse.X, mouse.Y)

    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {character} -- ignore your own character
    raycastParams.IgnoreWater = true

    local result = Workspace:Raycast(unitRay.Origin, unitRay.Direction * 1000, raycastParams)

    if result then
        local hitPart = result.Instance
        if hitPart.Transparency < 1 and hitPart.CanCollide then
            return result.Position
        else
            return unitRay.Origin + unitRay.Direction * 100
        end
    else
        return unitRay.Origin + unitRay.Direction * 100
    end
end

-- Function to update character rotation
local function updateCharacterRotation()
    if holdingR and character then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local mousePosition = getMouseTargetPosition()
            local direction = (mousePosition - rootPart.Position).Unit
            rootPart.CFrame = CFrame.new(rootPart.Position, rootPart.Position + direction)
        end
    end
end

-- Detect when "R" is pressed and held
UserInputService.InputBegan:Connect(function(input, gp)
    if not gp and input.KeyCode == Enum.KeyCode.R then
        holdingR = true
    end
end)

-- Detect when "R" is released
UserInputService.InputEnded:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.R then
        holdingR = false
    end
end)

-- Update the character's facing direction every frame
RunService.RenderStepped:Connect(updateCharacterRotation)
